apiVersion: compliance.mcm.ibm.com/v1alpha1
kind: Compliance
metadata:
  name: compliance-icp-base
  namespace: mcm-namespace
spec:
  runtime-rules:
    - apiVersion: policy.mcm.ibm.com/v1alpha1
      kind: Policy
      metadata:
        name: policy-compliance-icp-base
        labels:
          cis-docker: "true"
      spec:
        remediationAction: "enforce" # enforce or inform
        complianceType: "musthave" # used as default, when missing in a particular sub-template
        namespaces:
          include: ["default"]
          exclude: ["kube*"]
        role-templates:
          - apiVersion: roletemplate.mcm.ibm.com/v1alpha1
            metadata:
              namespace: "" # will be inferred
              name: operator-role
            selector:
              matchLabels:
                dev: "true"
            complianceType: "musthave" # at this level, it means the role must exist with the rules that it musthave below
            rules:
              - complianceType: "mustnothave" # at this level, it means if the role exists the rule is a mustnothave
                policyRule:
                  apiGroups: ["core"]
                  resources: ["secrets"]
                  verbs: ["get", "list", "watch","delete", "create", "update", "patch"]
              - complianceType: "musthave" # at this level, it means if the role exists the rule is a musthave
                policyRule:
                  apiGroups: ["core"]
                  resources: ["pods"]
                  verbs: ["get", "list", "watch"]
        object-templates:
          - complianceType: "musthave"
            objectDefinition:
              kind: RoleBinding
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: operate-pods-rolebinding
                namespace: default
              subjects:
              - kind: User
                name: admin # Name is case sensitive
                apiGroup: rbac.authorization.k8s.io
              roleRef:
                kind: Role #this must be Role or ClusterRole
                name: operator # this must match the name of the Role or ClusterRole you wish to bind to
                apiGroup: rbac.authorization.k8s.io
          - complianceType: "musthave"
            objectDefinition:
              kind: NetworkPolicy
              apiVersion: networking.k8s.io/v1
              metadata:
                namespace: default
                name: allow-super-secret-app
              spec:
                podSelector:
                  matchLabels:
                    app: my-super-secret-app
                ingress:
                - from:
                  - namespaceSelector: {} # accept ingress from all pods within this namespace only
          - complianceType: "musthave"
            objectDefinition:
              apiVersion: policy/v1beta1
              kind: PodSecurityPolicy
              metadata:
                name: restricted-mcm
                annotations:
                  seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
              spec:
                privileged: false # no priviliedged pods
                allowPrivilegeEscalation: false
                allowedCapabilities:
                - '*'
                volumes:
                - '*'
                hostNetwork: true
                hostPorts:
                - min: 1000 # ports < 1000 are reserved
                  max: 65535
                hostIPC: false
                hostPID: false
                runAsUser:
                  rule: 'RunAsAny'
                seLinux:
                  rule: 'RunAsAny'
                supplementalGroups:
                  rule: 'RunAsAny'
                fsGroup:
                  rule: 'RunAsAny'
          - complianceType: "musthave"
            objectDefinition:
              apiVersion: v1
              kind: LimitRange
              metadata:
                name: mem-limit-range
              spec:
                limits:
                - default:
                    memory: 512Mi
                  defaultRequest:
                    memory: 256Mi
                  type: Container
---
# this is a placement policy that selects clusters based on a label
apiVersion: mcm.ibm.com/v1alpha1
kind: PlacementPolicy
metadata:
  name: placement-compliance-icp-base
  namespace: mcm-namespace
spec:
  clusterLabels:
    matchLabels:
      owner: it
---
# this is a placement binding that binds the placement policy and the compliance policy
apiVersion: mcm.ibm.com/v1alpha1
kind: PlacementBinding
metadata:
  name: binding-compliance-icp-base
  namespace: mcm-namespace
placementRef:
  name: placement-compliance-icp-base
  apiGroup: mcm.ibm.com
  kind: PlacementPolicy
subjects:
- name: compliance-icp-base
  apiGroup: mcm.ibm.com
  kind: Compliance
